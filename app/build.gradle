plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.javaconfigurations'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.javaconfigurations"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    flavorDimensions "environment"
    productFlavors {

        production {
            dimension "environment"
        }

        staging {
            dimension "environment"
        }
    }

}

def allOpenAttribute = Attribute.of("allOpenVariant", String.class)
DependencyHandler dependencyHandler = project.dependencies
configurations {
    allOpenConsumed {
        attributes { AttributeContainer attributeContainer ->
            attributeContainer.attribute(allOpenAttribute, "true")
        }
        dependencies.add(dependencyHandler.project(path: ':lib'))
    }
}

Configuration allOpenConfiguration = configurations.findByName("allOpenConsumed")
def allOpenFiles =
        project.files({ allOpenConfiguration.files })
                .builtBy(allOpenConfiguration)

dependencies {
    productionImplementation(project(':lib'))
    stagingImplementation allOpenFiles

    implementation 'com.google.android.material:material:1.8.0'
}
